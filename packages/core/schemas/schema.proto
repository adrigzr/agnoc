syntax = "proto2";

message COMMON_ERROR_REPLY {
  required uint32 result = 1;
  required string error = 2;
  required uint32 opcode = 3;
}

message CLIENT_IDLE_TIMEOUT {}

message DEVICE_MAPID_PUSH_HAS_WAITING_BE_SAVED {
    required uint32 result = 1;
}

message CLIENT_HEARTBEAT_REQ {}

message CLIENT_HEARTBEAT_RSP {}

message CLIENT_ONLINE_REQ {
  required string deviceSerialNumber = 1;
  required bool unk1 = 2;
  required uint32 unk2 = 3;
}

message CLIENT_ONLINE_RSP {
  required uint32 result = 1;
  optional string reason = 2;
}

message DEVICE_REGISTER_REQ {
  required string softwareVersion = 1;
  required string hardwareVersion = 2;
  required string deviceSerialNumber = 3;
  required string deviceMac = 4;
  required uint32 deviceType = 5;
  required uint32 customerFirmwareId = 6;
  required string ctrlVersion = 7;
}

message DEVICE_REGISTER_RSP {
  message Device {
    required uint32 id = 1;
  }

  required uint32 result = 1;
  required Device device = 3;
}

message DEVICE_VERSION_INFO_UPDATE_REQ {
  required string softwareVersion = 1;
  required string hardwareVersion = 2;
}

message DEVICE_VERSION_INFO_UPDATE_RSP {
  required uint32 result = 1;
}

message PUSH_DEVICE_AGENT_SETTING_REQ {
  message TaskList {
    required uint32 orderId = 1;
    required bool enable = 2;
    required bool repeat = 3;
    required uint32 weekday = 4;
    required uint32 day_time = 5;
  }

  message Voice {
    required bool voiceMode = 1;
    required bool volume = 2;
  }

  message Config {
    required bool ecoMode = 1;
    required bool repeatClean = 2;
    required bool brokenEnable = 3;
    required bool carpetTurbo = 4;
    required bool historyMapEnable = 5;
  }

  message Status {
    required bool isOpen = 1;
    required uint32 beginTime = 2;
    required uint32 endTime = 3;
  }

  required uint32 deviceId = 1;
  required Voice voice = 2;
  required Config config = 3;
  required TaskList taskList = 4;
  required PUSH_DEVICE_PACKAGE_UPGRADE_INFO_REQ ota = 5;
  required Status status = 7;
}

message PUSH_DEVICE_AGENT_SETTING_RSP {
  required uint32 result = 1;
}

message PUSH_DEVICE_PACKAGE_UPGRADE_INFO_REQ {
  required bool newVersion = 1;
  required string packageSize = 2;
  required string systemVersion = 3;
  required string otaPackageVersion = 4;
  required string remoteUrl = 5;
  required bool forceupgrade = 6;
}

message PUSH_DEVICE_PACKAGE_UPGRADE_INFO_RSP {
  required uint32 result = 1;
}

message PUSH_DEVICE_BATTERY_INFO_REQ {
  message Battery {
    required uint32 level = 1;
  }

  required Battery battery = 1;
}

message PUSH_DEVICE_BATTERY_INFO_RSP {
  required uint32 result = 1;
}

message DEVICE_SEEK_LOCATION_REQ {}

message DEVICE_SEEK_LOCATION_RSP {}

message DEVICE_STATUS_GETTING_REQ {}

message DEVICE_MAPID_WORK_STATUS_PUSH_REQ {
  required uint32 mapHeadId = 1;
  required bool areaCleanFlag = 2;
  required uint32 workMode = 3;
  required uint32 battery = 4;
  required bool chargeStatus = 5;
  required uint32 type = 6;
  required uint32 faultCode = 7;
  required uint32 cleanPreference = 8;
  required bool repeatClean = 9;
  required uint32 cleanTime = 10;
  required uint32 cleanSize = 11;
  optional uint32 waterLevel = 12;
  optional uint32 dustBoxType = 13;
  optional bool mopType = 14;
}

message DEVICE_SET_CLEAN_PREFERENCE_REQ {
  required uint32 mode = 1;
}

message DEVICE_SET_CLEAN_PREFERENCE_RSP {
  required uint32 result = 1;
}

message DEVICE_AUTO_CLEAN_REQ {
  required uint32 mode = 1;
  required uint32 unk1 = 2;
}

message DEVICE_AUTO_CLEAN_RSP {}

message DEVICE_CHARGE_REQ {
  required uint32 unk1 = 1;
}

message DEVICE_CHARGE_RSP {
  required uint32 result = 1;
}

message DEVICE_MAPID_GET_GLOBAL_INFO_REQ {
  required uint32 mask = 1;
}

message DEVICE_MAPID_SET_NAVIGATION_REQ {
  required uint32 mapHeadId = 1;
  required float poseX = 2;
  required float poseY = 3;
  required float posePhi = 4;
  required bool update = 5;
}

message DEVICE_MAPID_SET_NAVIGATION_RSP {
  required uint32 result = 1;
  required DEVICE_MAPID_SET_NAVIGATION_REQ position = 3;
}

message DEVICE_WORKSTATUS_REPORT_REQ {
  required uint32 unk1 = 1;
}

message DEVICE_WORKSTATUS_REPORT_RSP {
  required uint32 result = 1;
}

message DEVICE_GET_ALL_GLOBAL_MAP_INFO_REQ {
    required uint32 unk1 = 1;
    required string unk2 = 2;
}

message DEVICE_GET_ALL_GLOBAL_MAP_INFO_RSP {
    required uint32 result = 1;
}

message DEVICE_GETTIME_REQ {}

message DEVICE_GETTIME_RSP {
    message Body {
        required uint32 deviceTime = 1;
        required uint32 deviceTimezone = 2;
    }

    required uint32 result = 1;
    required Body body = 3;
}

message DEVICE_CONTROL_LOCK_REQ {}

message DEVICE_CONTROL_LOCK_RSP {
    required uint32 result = 1;
}

message DEVICE_MAPID_SET_AREA_CLEAN_INFO_REQ {
  message Coordinate {
    required float x = 1;
    required float y = 2;
  }

  message CleanArea {
    required uint32 cleanAreaId = 1;
    required uint32 unk1 = 2;
    required uint32 coordinateLength = 3;
    repeated Coordinate coordinateList = 4;
  }

  required uint32 mapHeadId = 1;
  required uint32 unk1 = 2;
  required uint32 cleanAreaLength = 3;
  repeated CleanArea cleanAreaList = 4;
}

message DEVICE_MAPID_SET_AREA_CLEAN_INFO_RSP {
  required uint32 result = 1;
  required DEVICE_MAPID_SET_AREA_CLEAN_INFO_REQ position = 3;
}

message DEVICE_AREA_CLEAN_REQ {
  required uint32 unk1 = 1;
}

message DEVICE_AREA_CLEAN_RSP {
  required uint32 result = 1;
}

message DEVICE_MANUAL_CTRL_REQ {
  required uint32 command = 1;
}

message DEVICE_MANUAL_CTRL_RSP {
  required uint32 result = 1;
}

message DEVICE_MAPID_SET_SAVEWAITINGMAP_INFO_REQ {
  required uint32 mode = 1;
}

message DEVICE_MAPID_SET_SAVEWAITINGMAP_INFO_RSP {
  required uint32 result = 1;
}

message DEVICE_ORDERLIST_GETTING_REQ {}

message DEVICE_ORDERLIST_GETTING_RSP {
  message PlanInfo {
    required uint32 planId = 1;
    required string planName = 2;
  }

  message MapInfo {
    required uint32 mapId = 1;
    required string mapName = 2;
    repeated PlanInfo planInfo = 3;
  }

  required uint32 result = 1;
  repeated DEVICE_ORDERLIST_SETTING_REQ orderList = 3;
  repeated MapInfo mapInfoList = 4;
}

message DEVICE_ORDERLIST_SETTING_REQ {
  message CleanInfo {
    required uint32 mapHeadId = 1;
    required uint32 planId = 2;
    required uint32 cleanMode = 3;
    required uint32 windPower = 4;
    required uint32 waterLevel = 5;
    required bool twiceClean = 6;
  }

  required uint32 orderId = 1;
  required bool enable = 2;
  required bool repeat = 3;
  required uint32 weekDay = 4;
  required uint32 dayTime = 5;
  required CleanInfo cleanInfo = 6;
}

message DEVICE_ORDERLIST_SETTING_RSP {
  required uint32 orderId = 1;
  required uint32 result = 2;
}

message DEVICE_ORDERLIST_DELETE_REQ {
  required uint32 orderId = 1;
  required uint32 mode = 2;
}

message DEVICE_ORDERLIST_DELETE_RSP {
  required uint32 orderId = 1;
  required uint32 result = 2;
}

message DEVICE_MAPID_GET_CONSUMABLES_PARAM_REQ {}

message DEVICE_MAPID_GET_CONSUMABLES_PARAM_RSP {
  required uint32 mainBrushTime = 1;
  required uint32 sideBrushTime = 2;
  required uint32 filterTime = 3;
  required uint32 dishclothTime = 4;
}

message DEVICE_EVENT_REPORT_CLEANTASK {
  message Unk1 {
    required uint32 unk1Unk1 = 1;
    required uint32 unk1Unk2 = 2;
    optional uint32 unk1Unk6 = 6;
  }

  required uint32 cleanId = 1;
  required uint32 startTime = 2;
  required uint32 endTime = 3;
  required uint32 unk4 = 4;
  required uint32 unk5 = 5;
  required uint32 unk6 = 6;
  required uint32 unk7 = 7;
  required Unk1 unk8 = 8;
  optional uint32 mapHeadId = 9;
  optional string mapName = 10;
  optional string planName = 11;
}

message DEVICE_EVENT_REPORT_CLEANMAP {
  required uint32 cleanId = 1;
  required bytes image = 2;
  required string cleanName = 3;
  required bytes unk4 = 4;
}

message DEVICE_CLEAN_MAP_BIN_DATA_REPORT_REQ {
  required uint32 unk1 = 1;
  required bytes unk2 = 2;
}

message DEVICE_OFFLINE_CMD {
  required uint32 result = 1;
}

message DEVICE_TIME_SYNC_RSP {
  message Body {
    required uint32 time = 1;
  }
  required uint32 result = 1;
  required Body body = 3;
}

message DEVICE_EVENT_REPORT_REQ {
  required uint32 unk1 = 1;
  required uint32 unk2 = 2;
}

message DEVICE_EVENT_REPORT_RSP {
  message Body {
    required uint32 time = 1;
  }
  required uint32 result = 1;
  required Body body = 3;
}

message UNK_11A4 {
  required uint32 unk1 = 1;
}

message UNK_11A7 {
  required uint32 unk1 = 1;
}

message UNK_0044 {}
